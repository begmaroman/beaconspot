// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: github.com/begmaroman/beaconspot/proto/beaconspot/beaconspot.proto

package beaconspotproto

import (
	context "context"
	reflect "reflect"
	sync "sync"

	health "github.com/begmaroman/beaconspot/proto/health"
	status "github.com/begmaroman/beaconspot/proto/status"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	v1alpha1 "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// GetAttestation operation
type GetAttestationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot           uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	CommitteeIndex uint64 `protobuf:"varint,2,opt,name=committee_index,json=committeeIndex,proto3" json:"committee_index,omitempty"`
}

func (x *GetAttestationRequest) Reset() {
	*x = GetAttestationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttestationRequest) ProtoMessage() {}

func (x *GetAttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttestationRequest.ProtoReflect.Descriptor instead.
func (*GetAttestationRequest) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{0}
}

func (x *GetAttestationRequest) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *GetAttestationRequest) GetCommitteeIndex() uint64 {
	if x != nil {
		return x.CommitteeIndex
	}
	return 0
}

type GetAttestationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*GetAttestationResponse_Error
	//	*GetAttestationResponse_AttestationData
	Result isGetAttestationResponse_Result `protobuf_oneof:"result"`
}

func (x *GetAttestationResponse) Reset() {
	*x = GetAttestationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttestationResponse) ProtoMessage() {}

func (x *GetAttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttestationResponse.ProtoReflect.Descriptor instead.
func (*GetAttestationResponse) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{1}
}

func (m *GetAttestationResponse) GetResult() isGetAttestationResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetAttestationResponse) GetError() *status.Status {
	if x, ok := x.GetResult().(*GetAttestationResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetAttestationResponse) GetAttestationData() *v1alpha1.AttestationData {
	if x, ok := x.GetResult().(*GetAttestationResponse_AttestationData); ok {
		return x.AttestationData
	}
	return nil
}

type isGetAttestationResponse_Result interface {
	isGetAttestationResponse_Result()
}

type GetAttestationResponse_Error struct {
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetAttestationResponse_AttestationData struct {
	AttestationData *v1alpha1.AttestationData `protobuf:"bytes,2,opt,name=attestation_data,json=attestationData,proto3,oneof"`
}

func (*GetAttestationResponse_Error) isGetAttestationResponse_Result() {}

func (*GetAttestationResponse_AttestationData) isGetAttestationResponse_Result() {}

// ProposeAttestation operation
type ProposeAttestationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttestationData *v1alpha1.AttestationData `protobuf:"bytes,1,opt,name=attestation_data,json=attestationData,proto3" json:"attestation_data,omitempty"`
	AggregationBits []byte                    `protobuf:"bytes,2,opt,name=aggregation_bits,json=aggregationBits,proto3" json:"aggregation_bits,omitempty"`
	Signature       []byte                    `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ProposeAttestationRequest) Reset() {
	*x = ProposeAttestationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeAttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeAttestationRequest) ProtoMessage() {}

func (x *ProposeAttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeAttestationRequest.ProtoReflect.Descriptor instead.
func (*ProposeAttestationRequest) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{2}
}

func (x *ProposeAttestationRequest) GetAttestationData() *v1alpha1.AttestationData {
	if x != nil {
		return x.AttestationData
	}
	return nil
}

func (x *ProposeAttestationRequest) GetAggregationBits() []byte {
	if x != nil {
		return x.AggregationBits
	}
	return nil
}

func (x *ProposeAttestationRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type ProposeAttestationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*ProposeAttestationResponse_Error
	//	*ProposeAttestationResponse_Empty
	Result isProposeAttestationResponse_Result `protobuf_oneof:"result"`
}

func (x *ProposeAttestationResponse) Reset() {
	*x = ProposeAttestationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeAttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeAttestationResponse) ProtoMessage() {}

func (x *ProposeAttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeAttestationResponse.ProtoReflect.Descriptor instead.
func (*ProposeAttestationResponse) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{3}
}

func (m *ProposeAttestationResponse) GetResult() isProposeAttestationResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ProposeAttestationResponse) GetError() *status.Status {
	if x, ok := x.GetResult().(*ProposeAttestationResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ProposeAttestationResponse) GetEmpty() *empty.Empty {
	if x, ok := x.GetResult().(*ProposeAttestationResponse_Empty); ok {
		return x.Empty
	}
	return nil
}

type isProposeAttestationResponse_Result interface {
	isProposeAttestationResponse_Result()
}

type ProposeAttestationResponse_Error struct {
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ProposeAttestationResponse_Empty struct {
	Empty *empty.Empty `protobuf:"bytes,2,opt,name=empty,proto3,oneof"`
}

func (*ProposeAttestationResponse_Error) isProposeAttestationResponse_Result() {}

func (*ProposeAttestationResponse_Empty) isProposeAttestationResponse_Result() {}

// GetAggregateSelectionProof operation
type GetAggregateSelectionProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot           uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	CommitteeIndex uint64 `protobuf:"varint,2,opt,name=committee_index,json=committeeIndex,proto3" json:"committee_index,omitempty"`
	PublicKey      []byte `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature      []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GetAggregateSelectionProofRequest) Reset() {
	*x = GetAggregateSelectionProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregateSelectionProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregateSelectionProofRequest) ProtoMessage() {}

func (x *GetAggregateSelectionProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregateSelectionProofRequest.ProtoReflect.Descriptor instead.
func (*GetAggregateSelectionProofRequest) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{4}
}

func (x *GetAggregateSelectionProofRequest) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *GetAggregateSelectionProofRequest) GetCommitteeIndex() uint64 {
	if x != nil {
		return x.CommitteeIndex
	}
	return 0
}

func (x *GetAggregateSelectionProofRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *GetAggregateSelectionProofRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type GetAggregateSelectionProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*GetAggregateSelectionProofResponse_Error
	//	*GetAggregateSelectionProofResponse_Data
	Result isGetAggregateSelectionProofResponse_Result `protobuf_oneof:"result"`
}

func (x *GetAggregateSelectionProofResponse) Reset() {
	*x = GetAggregateSelectionProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAggregateSelectionProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAggregateSelectionProofResponse) ProtoMessage() {}

func (x *GetAggregateSelectionProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAggregateSelectionProofResponse.ProtoReflect.Descriptor instead.
func (*GetAggregateSelectionProofResponse) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{5}
}

func (m *GetAggregateSelectionProofResponse) GetResult() isGetAggregateSelectionProofResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetAggregateSelectionProofResponse) GetError() *status.Status {
	if x, ok := x.GetResult().(*GetAggregateSelectionProofResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetAggregateSelectionProofResponse) GetData() *v1alpha1.AggregateAttestationAndProof {
	if x, ok := x.GetResult().(*GetAggregateSelectionProofResponse_Data); ok {
		return x.Data
	}
	return nil
}

type isGetAggregateSelectionProofResponse_Result interface {
	isGetAggregateSelectionProofResponse_Result()
}

type GetAggregateSelectionProofResponse_Error struct {
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetAggregateSelectionProofResponse_Data struct {
	Data *v1alpha1.AggregateAttestationAndProof `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*GetAggregateSelectionProofResponse_Error) isGetAggregateSelectionProofResponse_Result() {}

func (*GetAggregateSelectionProofResponse_Data) isGetAggregateSelectionProofResponse_Result() {}

// GetAggregateSelectionProof operation
type SubmitSignedAggregateSelectionProofRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte                                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Data      *v1alpha1.AggregateAttestationAndProof `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SubmitSignedAggregateSelectionProofRequest) Reset() {
	*x = SubmitSignedAggregateSelectionProofRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitSignedAggregateSelectionProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitSignedAggregateSelectionProofRequest) ProtoMessage() {}

func (x *SubmitSignedAggregateSelectionProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitSignedAggregateSelectionProofRequest.ProtoReflect.Descriptor instead.
func (*SubmitSignedAggregateSelectionProofRequest) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitSignedAggregateSelectionProofRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SubmitSignedAggregateSelectionProofRequest) GetData() *v1alpha1.AggregateAttestationAndProof {
	if x != nil {
		return x.Data
	}
	return nil
}

type SubmitSignedAggregateSelectionProofResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*SubmitSignedAggregateSelectionProofResponse_Error
	//	*SubmitSignedAggregateSelectionProofResponse_Empty
	Result isSubmitSignedAggregateSelectionProofResponse_Result `protobuf_oneof:"result"`
}

func (x *SubmitSignedAggregateSelectionProofResponse) Reset() {
	*x = SubmitSignedAggregateSelectionProofResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitSignedAggregateSelectionProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitSignedAggregateSelectionProofResponse) ProtoMessage() {}

func (x *SubmitSignedAggregateSelectionProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitSignedAggregateSelectionProofResponse.ProtoReflect.Descriptor instead.
func (*SubmitSignedAggregateSelectionProofResponse) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{7}
}

func (m *SubmitSignedAggregateSelectionProofResponse) GetResult() isSubmitSignedAggregateSelectionProofResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SubmitSignedAggregateSelectionProofResponse) GetError() *status.Status {
	if x, ok := x.GetResult().(*SubmitSignedAggregateSelectionProofResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SubmitSignedAggregateSelectionProofResponse) GetEmpty() *empty.Empty {
	if x, ok := x.GetResult().(*SubmitSignedAggregateSelectionProofResponse_Empty); ok {
		return x.Empty
	}
	return nil
}

type isSubmitSignedAggregateSelectionProofResponse_Result interface {
	isSubmitSignedAggregateSelectionProofResponse_Result()
}

type SubmitSignedAggregateSelectionProofResponse_Error struct {
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type SubmitSignedAggregateSelectionProofResponse_Empty struct {
	Empty *empty.Empty `protobuf:"bytes,2,opt,name=empty,proto3,oneof"`
}

func (*SubmitSignedAggregateSelectionProofResponse_Error) isSubmitSignedAggregateSelectionProofResponse_Result() {
}

func (*SubmitSignedAggregateSelectionProofResponse_Empty) isSubmitSignedAggregateSelectionProofResponse_Result() {
}

// GetBlock operation
type GetBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot         uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	RandaoReveal []byte `protobuf:"bytes,2,opt,name=randao_reveal,json=randaoReveal,proto3" json:"randao_reveal,omitempty"`
	Graffiti     []byte `protobuf:"bytes,3,opt,name=graffiti,proto3" json:"graffiti,omitempty"`
}

func (x *GetBlockRequest) Reset() {
	*x = GetBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockRequest) ProtoMessage() {}

func (x *GetBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockRequest.ProtoReflect.Descriptor instead.
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{8}
}

func (x *GetBlockRequest) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *GetBlockRequest) GetRandaoReveal() []byte {
	if x != nil {
		return x.RandaoReveal
	}
	return nil
}

func (x *GetBlockRequest) GetGraffiti() []byte {
	if x != nil {
		return x.Graffiti
	}
	return nil
}

type GetBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*GetBlockResponse_Error
	//	*GetBlockResponse_BeaconBlock
	Result isGetBlockResponse_Result `protobuf_oneof:"result"`
}

func (x *GetBlockResponse) Reset() {
	*x = GetBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockResponse) ProtoMessage() {}

func (x *GetBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockResponse.ProtoReflect.Descriptor instead.
func (*GetBlockResponse) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{9}
}

func (m *GetBlockResponse) GetResult() isGetBlockResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetBlockResponse) GetError() *status.Status {
	if x, ok := x.GetResult().(*GetBlockResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *GetBlockResponse) GetBeaconBlock() *v1alpha1.BeaconBlock {
	if x, ok := x.GetResult().(*GetBlockResponse_BeaconBlock); ok {
		return x.BeaconBlock
	}
	return nil
}

type isGetBlockResponse_Result interface {
	isGetBlockResponse_Result()
}

type GetBlockResponse_Error struct {
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type GetBlockResponse_BeaconBlock struct {
	BeaconBlock *v1alpha1.BeaconBlock `protobuf:"bytes,2,opt,name=beacon_block,json=beaconBlock,proto3,oneof"`
}

func (*GetBlockResponse_Error) isGetBlockResponse_Result() {}

func (*GetBlockResponse_BeaconBlock) isGetBlockResponse_Result() {}

// ProposeBlock operation
type ProposeBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature   []byte                `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	BeaconBlock *v1alpha1.BeaconBlock `protobuf:"bytes,2,opt,name=beacon_block,json=beaconBlock,proto3" json:"beacon_block,omitempty"`
}

func (x *ProposeBlockRequest) Reset() {
	*x = ProposeBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeBlockRequest) ProtoMessage() {}

func (x *ProposeBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeBlockRequest.ProtoReflect.Descriptor instead.
func (*ProposeBlockRequest) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{10}
}

func (x *ProposeBlockRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ProposeBlockRequest) GetBeaconBlock() *v1alpha1.BeaconBlock {
	if x != nil {
		return x.BeaconBlock
	}
	return nil
}

type ProposeBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*ProposeBlockResponse_Error
	//	*ProposeBlockResponse_Empty
	Result isProposeBlockResponse_Result `protobuf_oneof:"result"`
}

func (x *ProposeBlockResponse) Reset() {
	*x = ProposeBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeBlockResponse) ProtoMessage() {}

func (x *ProposeBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeBlockResponse.ProtoReflect.Descriptor instead.
func (*ProposeBlockResponse) Descriptor() ([]byte, []int) {
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP(), []int{11}
}

func (m *ProposeBlockResponse) GetResult() isProposeBlockResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ProposeBlockResponse) GetError() *status.Status {
	if x, ok := x.GetResult().(*ProposeBlockResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ProposeBlockResponse) GetEmpty() *empty.Empty {
	if x, ok := x.GetResult().(*ProposeBlockResponse_Empty); ok {
		return x.Empty
	}
	return nil
}

type isProposeBlockResponse_Result interface {
	isProposeBlockResponse_Result()
}

type ProposeBlockResponse_Error struct {
	Error *status.Status `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ProposeBlockResponse_Empty struct {
	Empty *empty.Empty `protobuf:"bytes,2,opt,name=empty,proto3,oneof"`
}

func (*ProposeBlockResponse_Error) isProposeBlockResponse_Result() {}

func (*ProposeBlockResponse_Empty) isProposeBlockResponse_Result() {}

var File_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto protoreflect.FileDescriptor

var file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDesc = []byte{
	0x0a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65, 0x67,
	0x6d, 0x61, 0x72, 0x6f, 0x6d, 0x61, 0x6e, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70,
	0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73,
	0x70, 0x6f, 0x74, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x65, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x65, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x65, 0x67, 0x6d, 0x61, 0x72, 0x6f, 0x6d, 0x61, 0x6e, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x73, 0x70, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x65, 0x67, 0x6d,
	0x61, 0x72, 0x6f, 0x6d, 0x61, 0x6e, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f,
	0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x98, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x53, 0x0a,
	0x10, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb7, 0x01, 0x0a,
	0x19, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x61, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e,
	0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a,
	0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x69, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x77, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x9d, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x9a, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x93, 0x01, 0x0a,
	0x2a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65,
	0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x88, 0x01, 0x0a, 0x2b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x66, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x5f, 0x72,
	0x65, 0x76, 0x65, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x61, 0x6e,
	0x64, 0x61, 0x6f, 0x52, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x74, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x67, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x74, 0x69, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x47, 0x0a, 0x0c, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7a,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x71, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xc0, 0x06,
	0x0a, 0x11, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x70, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x38, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x62, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f,
	0x0a, 0x12, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x41, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x87, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x32,
	0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2, 0x01, 0x0a, 0x23, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x12, 0x3b, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x2e, 0x62, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62,
	0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x24, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x73, 0x70, 0x6f, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62,
	0x65, 0x67, 0x6d, 0x61, 0x72, 0x6f, 0x6d, 0x61, 0x6e, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x73, 0x70, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x73, 0x70, 0x6f, 0x74, 0x3b, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x70, 0x6f, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescOnce sync.Once
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescData = file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDesc
)

func file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescGZIP() []byte {
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescOnce.Do(func() {
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescData)
	})
	return file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDescData
}

var file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_goTypes = []interface{}{
	(*GetAttestationRequest)(nil),                       // 0: beaconspotproto.GetAttestationRequest
	(*GetAttestationResponse)(nil),                      // 1: beaconspotproto.GetAttestationResponse
	(*ProposeAttestationRequest)(nil),                   // 2: beaconspotproto.ProposeAttestationRequest
	(*ProposeAttestationResponse)(nil),                  // 3: beaconspotproto.ProposeAttestationResponse
	(*GetAggregateSelectionProofRequest)(nil),           // 4: beaconspotproto.GetAggregateSelectionProofRequest
	(*GetAggregateSelectionProofResponse)(nil),          // 5: beaconspotproto.GetAggregateSelectionProofResponse
	(*SubmitSignedAggregateSelectionProofRequest)(nil),  // 6: beaconspotproto.SubmitSignedAggregateSelectionProofRequest
	(*SubmitSignedAggregateSelectionProofResponse)(nil), // 7: beaconspotproto.SubmitSignedAggregateSelectionProofResponse
	(*GetBlockRequest)(nil),                             // 8: beaconspotproto.GetBlockRequest
	(*GetBlockResponse)(nil),                            // 9: beaconspotproto.GetBlockResponse
	(*ProposeBlockRequest)(nil),                         // 10: beaconspotproto.ProposeBlockRequest
	(*ProposeBlockResponse)(nil),                        // 11: beaconspotproto.ProposeBlockResponse
	(*status.Status)(nil),                               // 12: Status
	(*v1alpha1.AttestationData)(nil),                    // 13: ethereum.eth.v1alpha1.AttestationData
	(*empty.Empty)(nil),                                 // 14: google.protobuf.Empty
	(*v1alpha1.AggregateAttestationAndProof)(nil),       // 15: ethereum.eth.v1alpha1.AggregateAttestationAndProof
	(*v1alpha1.BeaconBlock)(nil),                        // 16: ethereum.eth.v1alpha1.BeaconBlock
	(*health.HealthResponse)(nil),                       // 17: health.HealthResponse
}
var file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_depIdxs = []int32{
	12, // 0: beaconspotproto.GetAttestationResponse.error:type_name -> Status
	13, // 1: beaconspotproto.GetAttestationResponse.attestation_data:type_name -> ethereum.eth.v1alpha1.AttestationData
	13, // 2: beaconspotproto.ProposeAttestationRequest.attestation_data:type_name -> ethereum.eth.v1alpha1.AttestationData
	12, // 3: beaconspotproto.ProposeAttestationResponse.error:type_name -> Status
	14, // 4: beaconspotproto.ProposeAttestationResponse.empty:type_name -> google.protobuf.Empty
	12, // 5: beaconspotproto.GetAggregateSelectionProofResponse.error:type_name -> Status
	15, // 6: beaconspotproto.GetAggregateSelectionProofResponse.data:type_name -> ethereum.eth.v1alpha1.AggregateAttestationAndProof
	15, // 7: beaconspotproto.SubmitSignedAggregateSelectionProofRequest.data:type_name -> ethereum.eth.v1alpha1.AggregateAttestationAndProof
	12, // 8: beaconspotproto.SubmitSignedAggregateSelectionProofResponse.error:type_name -> Status
	14, // 9: beaconspotproto.SubmitSignedAggregateSelectionProofResponse.empty:type_name -> google.protobuf.Empty
	12, // 10: beaconspotproto.GetBlockResponse.error:type_name -> Status
	16, // 11: beaconspotproto.GetBlockResponse.beacon_block:type_name -> ethereum.eth.v1alpha1.BeaconBlock
	16, // 12: beaconspotproto.ProposeBlockRequest.beacon_block:type_name -> ethereum.eth.v1alpha1.BeaconBlock
	12, // 13: beaconspotproto.ProposeBlockResponse.error:type_name -> Status
	14, // 14: beaconspotproto.ProposeBlockResponse.empty:type_name -> google.protobuf.Empty
	14, // 15: beaconspotproto.BeaconSpotService.Health:input_type -> google.protobuf.Empty
	14, // 16: beaconspotproto.BeaconSpotService.Ping:input_type -> google.protobuf.Empty
	0,  // 17: beaconspotproto.BeaconSpotService.GetAttestation:input_type -> beaconspotproto.GetAttestationRequest
	2,  // 18: beaconspotproto.BeaconSpotService.ProposeAttestation:input_type -> beaconspotproto.ProposeAttestationRequest
	4,  // 19: beaconspotproto.BeaconSpotService.GetAggregateSelectionProof:input_type -> beaconspotproto.GetAggregateSelectionProofRequest
	6,  // 20: beaconspotproto.BeaconSpotService.SubmitSignedAggregateSelectionProof:input_type -> beaconspotproto.SubmitSignedAggregateSelectionProofRequest
	8,  // 21: beaconspotproto.BeaconSpotService.GetBlock:input_type -> beaconspotproto.GetBlockRequest
	10, // 22: beaconspotproto.BeaconSpotService.ProposeBlock:input_type -> beaconspotproto.ProposeBlockRequest
	17, // 23: beaconspotproto.BeaconSpotService.Health:output_type -> health.HealthResponse
	14, // 24: beaconspotproto.BeaconSpotService.Ping:output_type -> google.protobuf.Empty
	1,  // 25: beaconspotproto.BeaconSpotService.GetAttestation:output_type -> beaconspotproto.GetAttestationResponse
	3,  // 26: beaconspotproto.BeaconSpotService.ProposeAttestation:output_type -> beaconspotproto.ProposeAttestationResponse
	5,  // 27: beaconspotproto.BeaconSpotService.GetAggregateSelectionProof:output_type -> beaconspotproto.GetAggregateSelectionProofResponse
	7,  // 28: beaconspotproto.BeaconSpotService.SubmitSignedAggregateSelectionProof:output_type -> beaconspotproto.SubmitSignedAggregateSelectionProofResponse
	9,  // 29: beaconspotproto.BeaconSpotService.GetBlock:output_type -> beaconspotproto.GetBlockResponse
	11, // 30: beaconspotproto.BeaconSpotService.ProposeBlock:output_type -> beaconspotproto.ProposeBlockResponse
	23, // [23:31] is the sub-list for method output_type
	15, // [15:23] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_init() }
func file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_init() {
	if File_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttestationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAttestationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeAttestationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeAttestationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregateSelectionProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAggregateSelectionProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitSignedAggregateSelectionProofRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitSignedAggregateSelectionProofResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GetAttestationResponse_Error)(nil),
		(*GetAttestationResponse_AttestationData)(nil),
	}
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ProposeAttestationResponse_Error)(nil),
		(*ProposeAttestationResponse_Empty)(nil),
	}
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*GetAggregateSelectionProofResponse_Error)(nil),
		(*GetAggregateSelectionProofResponse_Data)(nil),
	}
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*SubmitSignedAggregateSelectionProofResponse_Error)(nil),
		(*SubmitSignedAggregateSelectionProofResponse_Empty)(nil),
	}
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*GetBlockResponse_Error)(nil),
		(*GetBlockResponse_BeaconBlock)(nil),
	}
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*ProposeBlockResponse_Error)(nil),
		(*ProposeBlockResponse_Empty)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_goTypes,
		DependencyIndexes: file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_depIdxs,
		MessageInfos:      file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_msgTypes,
	}.Build()
	File_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto = out.File
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_rawDesc = nil
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_goTypes = nil
	file_github_com_begmaroman_beaconspot_proto_beaconspot_beaconspot_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion5

// BeaconSpotServiceClient is the client API for BeaconSpotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BeaconSpotServiceClient interface {
	Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*health.HealthResponse, error)
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// Attester
	GetAttestation(ctx context.Context, in *GetAttestationRequest, opts ...grpc.CallOption) (*GetAttestationResponse, error)
	ProposeAttestation(ctx context.Context, in *ProposeAttestationRequest, opts ...grpc.CallOption) (*ProposeAttestationResponse, error)
	// Aggregate
	GetAggregateSelectionProof(ctx context.Context, in *GetAggregateSelectionProofRequest, opts ...grpc.CallOption) (*GetAggregateSelectionProofResponse, error)
	SubmitSignedAggregateSelectionProof(ctx context.Context, in *SubmitSignedAggregateSelectionProofRequest, opts ...grpc.CallOption) (*SubmitSignedAggregateSelectionProofResponse, error)
	// Propose
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
	ProposeBlock(ctx context.Context, in *ProposeBlockRequest, opts ...grpc.CallOption) (*ProposeBlockResponse, error)
}

type beaconSpotServiceClient struct {
	cc *grpc.ClientConn
}

func NewBeaconSpotServiceClient(cc *grpc.ClientConn) BeaconSpotServiceClient {
	return &beaconSpotServiceClient{cc}
}

func (c *beaconSpotServiceClient) Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*health.HealthResponse, error) {
	out := new(health.HealthResponse)
	err := c.cc.Invoke(ctx, "/beaconspotproto.BeaconSpotService/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconSpotServiceClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/beaconspotproto.BeaconSpotService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconSpotServiceClient) GetAttestation(ctx context.Context, in *GetAttestationRequest, opts ...grpc.CallOption) (*GetAttestationResponse, error) {
	out := new(GetAttestationResponse)
	err := c.cc.Invoke(ctx, "/beaconspotproto.BeaconSpotService/GetAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconSpotServiceClient) ProposeAttestation(ctx context.Context, in *ProposeAttestationRequest, opts ...grpc.CallOption) (*ProposeAttestationResponse, error) {
	out := new(ProposeAttestationResponse)
	err := c.cc.Invoke(ctx, "/beaconspotproto.BeaconSpotService/ProposeAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconSpotServiceClient) GetAggregateSelectionProof(ctx context.Context, in *GetAggregateSelectionProofRequest, opts ...grpc.CallOption) (*GetAggregateSelectionProofResponse, error) {
	out := new(GetAggregateSelectionProofResponse)
	err := c.cc.Invoke(ctx, "/beaconspotproto.BeaconSpotService/GetAggregateSelectionProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconSpotServiceClient) SubmitSignedAggregateSelectionProof(ctx context.Context, in *SubmitSignedAggregateSelectionProofRequest, opts ...grpc.CallOption) (*SubmitSignedAggregateSelectionProofResponse, error) {
	out := new(SubmitSignedAggregateSelectionProofResponse)
	err := c.cc.Invoke(ctx, "/beaconspotproto.BeaconSpotService/SubmitSignedAggregateSelectionProof", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconSpotServiceClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := c.cc.Invoke(ctx, "/beaconspotproto.BeaconSpotService/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconSpotServiceClient) ProposeBlock(ctx context.Context, in *ProposeBlockRequest, opts ...grpc.CallOption) (*ProposeBlockResponse, error) {
	out := new(ProposeBlockResponse)
	err := c.cc.Invoke(ctx, "/beaconspotproto.BeaconSpotService/ProposeBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BeaconSpotServiceServer is the server API for BeaconSpotService service.
type BeaconSpotServiceServer interface {
	Health(context.Context, *empty.Empty) (*health.HealthResponse, error)
	Ping(context.Context, *empty.Empty) (*empty.Empty, error)
	// Attester
	GetAttestation(context.Context, *GetAttestationRequest) (*GetAttestationResponse, error)
	ProposeAttestation(context.Context, *ProposeAttestationRequest) (*ProposeAttestationResponse, error)
	// Aggregate
	GetAggregateSelectionProof(context.Context, *GetAggregateSelectionProofRequest) (*GetAggregateSelectionProofResponse, error)
	SubmitSignedAggregateSelectionProof(context.Context, *SubmitSignedAggregateSelectionProofRequest) (*SubmitSignedAggregateSelectionProofResponse, error)
	// Propose
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
	ProposeBlock(context.Context, *ProposeBlockRequest) (*ProposeBlockResponse, error)
}

// UnimplementedBeaconSpotServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBeaconSpotServiceServer struct {
}

func (*UnimplementedBeaconSpotServiceServer) Health(context.Context, *empty.Empty) (*health.HealthResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedBeaconSpotServiceServer) Ping(context.Context, *empty.Empty) (*empty.Empty, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedBeaconSpotServiceServer) GetAttestation(context.Context, *GetAttestationRequest) (*GetAttestationResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetAttestation not implemented")
}
func (*UnimplementedBeaconSpotServiceServer) ProposeAttestation(context.Context, *ProposeAttestationRequest) (*ProposeAttestationResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ProposeAttestation not implemented")
}
func (*UnimplementedBeaconSpotServiceServer) GetAggregateSelectionProof(context.Context, *GetAggregateSelectionProofRequest) (*GetAggregateSelectionProofResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetAggregateSelectionProof not implemented")
}
func (*UnimplementedBeaconSpotServiceServer) SubmitSignedAggregateSelectionProof(context.Context, *SubmitSignedAggregateSelectionProofRequest) (*SubmitSignedAggregateSelectionProofResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method SubmitSignedAggregateSelectionProof not implemented")
}
func (*UnimplementedBeaconSpotServiceServer) GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetBlock not implemented")
}
func (*UnimplementedBeaconSpotServiceServer) ProposeBlock(context.Context, *ProposeBlockRequest) (*ProposeBlockResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method ProposeBlock not implemented")
}

func RegisterBeaconSpotServiceServer(s *grpc.Server, srv BeaconSpotServiceServer) {
	s.RegisterService(&_BeaconSpotService_serviceDesc, srv)
}

func _BeaconSpotService_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconSpotServiceServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beaconspotproto.BeaconSpotService/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconSpotServiceServer).Health(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconSpotService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconSpotServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beaconspotproto.BeaconSpotService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconSpotServiceServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconSpotService_GetAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttestationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconSpotServiceServer).GetAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beaconspotproto.BeaconSpotService/GetAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconSpotServiceServer).GetAttestation(ctx, req.(*GetAttestationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconSpotService_ProposeAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProposeAttestationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconSpotServiceServer).ProposeAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beaconspotproto.BeaconSpotService/ProposeAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconSpotServiceServer).ProposeAttestation(ctx, req.(*ProposeAttestationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconSpotService_GetAggregateSelectionProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAggregateSelectionProofRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconSpotServiceServer).GetAggregateSelectionProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beaconspotproto.BeaconSpotService/GetAggregateSelectionProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconSpotServiceServer).GetAggregateSelectionProof(ctx, req.(*GetAggregateSelectionProofRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconSpotService_SubmitSignedAggregateSelectionProof_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitSignedAggregateSelectionProofRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconSpotServiceServer).SubmitSignedAggregateSelectionProof(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beaconspotproto.BeaconSpotService/SubmitSignedAggregateSelectionProof",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconSpotServiceServer).SubmitSignedAggregateSelectionProof(ctx, req.(*SubmitSignedAggregateSelectionProofRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconSpotService_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconSpotServiceServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beaconspotproto.BeaconSpotService/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconSpotServiceServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconSpotService_ProposeBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProposeBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconSpotServiceServer).ProposeBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/beaconspotproto.BeaconSpotService/ProposeBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconSpotServiceServer).ProposeBlock(ctx, req.(*ProposeBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BeaconSpotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "beaconspotproto.BeaconSpotService",
	HandlerType: (*BeaconSpotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Health",
			Handler:    _BeaconSpotService_Health_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _BeaconSpotService_Ping_Handler,
		},
		{
			MethodName: "GetAttestation",
			Handler:    _BeaconSpotService_GetAttestation_Handler,
		},
		{
			MethodName: "ProposeAttestation",
			Handler:    _BeaconSpotService_ProposeAttestation_Handler,
		},
		{
			MethodName: "GetAggregateSelectionProof",
			Handler:    _BeaconSpotService_GetAggregateSelectionProof_Handler,
		},
		{
			MethodName: "SubmitSignedAggregateSelectionProof",
			Handler:    _BeaconSpotService_SubmitSignedAggregateSelectionProof_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _BeaconSpotService_GetBlock_Handler,
		},
		{
			MethodName: "ProposeBlock",
			Handler:    _BeaconSpotService_ProposeBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/begmaroman/beaconspot/proto/beaconspot/beaconspot.proto",
}
