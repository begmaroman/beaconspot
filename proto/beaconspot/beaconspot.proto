syntax = "proto3";

option go_package = "github.com/begmaroman/beaconspot/proto/beaconspot;beaconspotproto";

package beaconspotproto;

import "eth/v1alpha1/attestation.proto";
import "eth/v1alpha1/beacon_block.proto";
import "google/protobuf/empty.proto";
import "github.com/begmaroman/beaconspot/proto/health/health.proto";
import "github.com/begmaroman/beaconspot/proto/status/status.proto";

service BeaconSpotService {
    rpc Health(google.protobuf.Empty) returns (health.HealthResponse) {}
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // Attester
    rpc GetAttestation(GetAttestationRequest) returns (GetAttestationResponse) {}
    rpc ProposeAttestation(ProposeAttestationRequest) returns (ProposeAttestationResponse) {}

    // Aggregate
    rpc GetAggregateSelectionProof(GetAggregateSelectionProofRequest) returns (GetAggregateSelectionProofResponse) {}
    rpc SubmitSignedAggregateSelectionProof(SubmitSignedAggregateSelectionProofRequest) returns (SubmitSignedAggregateSelectionProofResponse) {}

    // Propose
    rpc GetBlock(GetBlockRequest) returns (GetBlockResponse) {}
    rpc ProposeBlock(ProposeBlockRequest) returns (ProposeBlockResponse) {}
}

// GetAttestation operation
message GetAttestationRequest {
    uint64 slot = 1;
    uint64 committee_index = 2;
}

message GetAttestationResponse {
    oneof result {
        Status error = 1;
        ethereum.eth.v1alpha1.AttestationData attestation_data = 2;
    }
}

// ProposeAttestation operation
message ProposeAttestationRequest {
    ethereum.eth.v1alpha1.AttestationData attestation_data = 1;
    bytes aggregation_bits = 2;
    bytes signature = 3;
}

message ProposeAttestationResponse {
    oneof result {
        Status error = 1;
        google.protobuf.Empty empty = 2;
    }
}

// GetAggregateSelectionProof operation
message GetAggregateSelectionProofRequest {
    uint64 slot = 1;
    uint64 committee_index = 2;
    bytes public_key = 3;
    bytes signature = 4;
}

message GetAggregateSelectionProofResponse {
    oneof result {
        Status error = 1;
        ethereum.eth.v1alpha1.AggregateAttestationAndProof data = 2;
    }
}

// GetAggregateSelectionProof operation
message SubmitSignedAggregateSelectionProofRequest {
    bytes signature = 1;
    ethereum.eth.v1alpha1.AggregateAttestationAndProof data = 2;
}

message SubmitSignedAggregateSelectionProofResponse {
    oneof result {
        Status error = 1;
        google.protobuf.Empty empty = 2;
    }
}

// GetBlock operation
message GetBlockRequest {
    uint64 slot = 1;
    bytes randao_reveal = 2;
    bytes graffiti = 3;
}

message GetBlockResponse {
    oneof result {
        Status error = 1;
        ethereum.eth.v1alpha1.BeaconBlock beacon_block = 2;
    }
}

// ProposeBlock operation
message ProposeBlockRequest {
    bytes signature = 1;
    ethereum.eth.v1alpha1.BeaconBlock beacon_block = 2;
}

message ProposeBlockResponse {
    oneof result {
        Status error = 1;
        google.protobuf.Empty empty = 2;
    }
}